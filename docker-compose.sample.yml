version: "3"
services:
  mysql5:
    image: mysql:${MYSQL5_VERSION}
    container_name: mysql5
    ports:
      - "${MYSQL5_HOST_PORT}:3306"
    volumes:
      - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql5:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
      TZ: "$TZ"

  gogs:
    container_name: gogs
    image: gogs/gogs:0.12.3
    ports:
      - "3222:22"
      - "${GOGS_PORT}:3000"
    volumes:
      - ${DATA_DIR}/gogs/data:/data
    environment:
      - TZ=${TZ}
    restart: always
    networks:
      - default

  drone-server:
    image: drone/drone:1.10.1
    container_name: drone-server
    depends_on:
      - mysql5
    ports:
      - "${DRONE_SERVER_PORT}:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_DIR}/drone/:/var/lib/drone
    environment:
      - DRONE_OPEN=true
      - DRONE_SERVER_HOST=drone-server
      - DRONE_DEBUG=true
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_GOGS=true
      - DRONE_GOGS_SKIP_VERIFY=false
      - DRONE_GOGS_SERVER=http://gogs:3000
      - DRONE_PROVIDER=gogs
      - DRONE_SERVER_PROTO=http
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_USER_CREATE=username:${DRONE_ADMIN},admin:true
      - DRONE_DATABASE_DATASOURCE=root:123456@tcp(mysql5)/drone?parseTime=true
      - DRONE_DATABASE_DRIVER=mysql
      - TZ=${TZ}
    restart: always
    networks:
      - default

  drone-agent:
    image: drone/agent:1.6.2
    container_name: drone-agent
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_SERVER=http://drone-server
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_RUNNER_CAPACITY=${DRONE_RUNNER_CAPACITY}
      - DRONE_DEBUG=true
      - TZ=${TZ}
    restart: always
    networks:
      - default

networks:
  default:
